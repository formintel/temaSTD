{"version":3,"sources":["../../../src/folders/utils/getFolderBreadcrumbs.ts"],"sourcesContent":["import type { Document, PayloadRequest } from '../../types/index.js'\nimport type { FolderBreadcrumb } from '../types.js'\n\ntype GetFolderBreadcrumbsArgs = {\n  breadcrumbs?: FolderBreadcrumb[]\n  folderID?: number | string\n  req: PayloadRequest\n}\n/**\n * Builds breadcrumbs up from child folder\n * all the way up to root folder\n */\nexport const getFolderBreadcrumbs = async ({\n  breadcrumbs = [],\n  folderID,\n  req,\n}: GetFolderBreadcrumbsArgs): Promise<FolderBreadcrumb[] | null> => {\n  const { payload, user } = req\n  const folderFieldName: string = payload.config.folders.fieldName\n  if (folderID) {\n    const folderQuery = await payload.find({\n      collection: payload.config.folders.slug,\n      depth: 0,\n      limit: 1,\n      overrideAccess: false,\n      req,\n      select: {\n        name: true,\n        [folderFieldName]: true,\n      },\n      user,\n      where: {\n        id: {\n          equals: folderID,\n        },\n      },\n    })\n\n    const folder = folderQuery.docs[0] as Document\n\n    if (folder) {\n      breadcrumbs.push({\n        id: folder.id,\n        name: folder.name,\n      })\n      if (folder[folderFieldName]) {\n        return getFolderBreadcrumbs({\n          breadcrumbs,\n          folderID:\n            typeof folder[folderFieldName] === 'number' ||\n            typeof folder[folderFieldName] === 'string'\n              ? folder[folderFieldName]\n              : folder[folderFieldName].id,\n          req,\n        })\n      }\n    }\n  }\n\n  return breadcrumbs.reverse()\n}\n"],"names":["getFolderBreadcrumbs","breadcrumbs","folderID","req","payload","user","folderFieldName","config","folders","fieldName","folderQuery","find","collection","slug","depth","limit","overrideAccess","select","name","where","id","equals","folder","docs","push","reverse"],"mappings":"AAQA;;;CAGC,GACD,OAAO,MAAMA,uBAAuB,OAAO,EACzCC,cAAc,EAAE,EAChBC,QAAQ,EACRC,GAAG,EACsB;IACzB,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAE,GAAGF;IAC1B,MAAMG,kBAA0BF,QAAQG,MAAM,CAACC,OAAO,CAACC,SAAS;IAChE,IAAIP,UAAU;QACZ,MAAMQ,cAAc,MAAMN,QAAQO,IAAI,CAAC;YACrCC,YAAYR,QAAQG,MAAM,CAACC,OAAO,CAACK,IAAI;YACvCC,OAAO;YACPC,OAAO;YACPC,gBAAgB;YAChBb;YACAc,QAAQ;gBACNC,MAAM;gBACN,CAACZ,gBAAgB,EAAE;YACrB;YACAD;YACAc,OAAO;gBACLC,IAAI;oBACFC,QAAQnB;gBACV;YACF;QACF;QAEA,MAAMoB,SAASZ,YAAYa,IAAI,CAAC,EAAE;QAElC,IAAID,QAAQ;YACVrB,YAAYuB,IAAI,CAAC;gBACfJ,IAAIE,OAAOF,EAAE;gBACbF,MAAMI,OAAOJ,IAAI;YACnB;YACA,IAAII,MAAM,CAAChB,gBAAgB,EAAE;gBAC3B,OAAON,qBAAqB;oBAC1BC;oBACAC,UACE,OAAOoB,MAAM,CAAChB,gBAAgB,KAAK,YACnC,OAAOgB,MAAM,CAAChB,gBAAgB,KAAK,WAC/BgB,MAAM,CAAChB,gBAAgB,GACvBgB,MAAM,CAAChB,gBAAgB,CAACc,EAAE;oBAChCjB;gBACF;YACF;QACF;IACF;IAEA,OAAOF,YAAYwB,OAAO;AAC5B,EAAC"}