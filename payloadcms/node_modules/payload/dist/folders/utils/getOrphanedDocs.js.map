{"version":3,"sources":["../../../src/folders/utils/getOrphanedDocs.ts"],"sourcesContent":["import type { CollectionSlug, PayloadRequest, Where } from '../../index.js'\nimport type { FolderOrDocument } from '../types.js'\n\nimport { formatFolderOrDocumentItem } from './formatFolderOrDocumentItem.js'\n\ntype Args = {\n  collectionSlug: CollectionSlug\n  req: PayloadRequest\n  search?: string\n}\nexport async function getOrphanedDocs({\n  collectionSlug,\n  req,\n  search,\n}: Args): Promise<FolderOrDocument[]> {\n  const { payload, user } = req\n  let whereConstraints: Where = {\n    or: [\n      {\n        [payload.config.folders.fieldName]: {\n          exists: false,\n        },\n      },\n      {\n        [payload.config.folders.fieldName]: {\n          equals: null,\n        },\n      },\n    ],\n  }\n\n  if (collectionSlug && search && payload.collections[collectionSlug].config.admin?.useAsTitle) {\n    whereConstraints = {\n      [payload.collections[collectionSlug].config.admin.useAsTitle]: {\n        like: search,\n      },\n    }\n  }\n\n  const orphanedFolders = await payload.find({\n    collection: collectionSlug,\n    limit: 0,\n    overrideAccess: false,\n    req,\n    sort: payload.collections[collectionSlug].config.admin.useAsTitle,\n    user,\n    where: whereConstraints,\n  })\n\n  return (\n    orphanedFolders?.docs.map((doc) =>\n      formatFolderOrDocumentItem({\n        folderFieldName: payload.config.folders.fieldName,\n        isUpload: Boolean(payload.collections[collectionSlug].config.upload),\n        relationTo: collectionSlug,\n        useAsTitle: payload.collections[collectionSlug].config.admin.useAsTitle,\n        value: doc,\n      }),\n    ) || []\n  )\n}\n"],"names":["formatFolderOrDocumentItem","getOrphanedDocs","collectionSlug","req","search","payload","user","whereConstraints","or","config","folders","fieldName","exists","equals","collections","admin","useAsTitle","like","orphanedFolders","find","collection","limit","overrideAccess","sort","where","docs","map","doc","folderFieldName","isUpload","Boolean","upload","relationTo","value"],"mappings":"AAGA,SAASA,0BAA0B,QAAQ,kCAAiC;AAO5E,OAAO,eAAeC,gBAAgB,EACpCC,cAAc,EACdC,GAAG,EACHC,MAAM,EACD;IACL,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAE,GAAGH;IAC1B,IAAII,mBAA0B;QAC5BC,IAAI;YACF;gBACE,CAACH,QAAQI,MAAM,CAACC,OAAO,CAACC,SAAS,CAAC,EAAE;oBAClCC,QAAQ;gBACV;YACF;YACA;gBACE,CAACP,QAAQI,MAAM,CAACC,OAAO,CAACC,SAAS,CAAC,EAAE;oBAClCE,QAAQ;gBACV;YACF;SACD;IACH;IAEA,IAAIX,kBAAkBE,UAAUC,QAAQS,WAAW,CAACZ,eAAe,CAACO,MAAM,CAACM,KAAK,EAAEC,YAAY;QAC5FT,mBAAmB;YACjB,CAACF,QAAQS,WAAW,CAACZ,eAAe,CAACO,MAAM,CAACM,KAAK,CAACC,UAAU,CAAC,EAAE;gBAC7DC,MAAMb;YACR;QACF;IACF;IAEA,MAAMc,kBAAkB,MAAMb,QAAQc,IAAI,CAAC;QACzCC,YAAYlB;QACZmB,OAAO;QACPC,gBAAgB;QAChBnB;QACAoB,MAAMlB,QAAQS,WAAW,CAACZ,eAAe,CAACO,MAAM,CAACM,KAAK,CAACC,UAAU;QACjEV;QACAkB,OAAOjB;IACT;IAEA,OACEW,iBAAiBO,KAAKC,IAAI,CAACC,MACzB3B,2BAA2B;YACzB4B,iBAAiBvB,QAAQI,MAAM,CAACC,OAAO,CAACC,SAAS;YACjDkB,UAAUC,QAAQzB,QAAQS,WAAW,CAACZ,eAAe,CAACO,MAAM,CAACsB,MAAM;YACnEC,YAAY9B;YACZc,YAAYX,QAAQS,WAAW,CAACZ,eAAe,CAACO,MAAM,CAACM,KAAK,CAACC,UAAU;YACvEiB,OAAON;QACT,OACG,EAAE;AAEX"}